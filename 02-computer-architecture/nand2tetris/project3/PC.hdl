// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
      // We get to traverse in the reverse way, checking the branch from the last branch
      // and moving up till we get to the first "if"

      // Get the inc, note that the "finalOut" is gotten from the last step where out
      // is emitted
      Inc16(in= finalOut, out= increased);

      // This is the else if (inc(t)) ... else block
      Mux16(a= finalOut, b= increased, sel= inc, out= o3);

      // This is the else if (load(t)) ... else (if (inc(t)) ... else block)
      Mux16(a= o3, b= in, sel= load, out= o2);

      // This is the if (reset(t)) ... else (if (load(t)) ... else (if (inc(t)) ... else block))
      Mux16(a= o2, b= false, sel= reset, out= o1);
      
      // This is the register which we use to store the values between cycles
      Register(in= o1, load= true, out=finalOut, out= out);
      // Mux(a= , b= , sel= reset, out=);
    //// Replace this comment with your code.
}